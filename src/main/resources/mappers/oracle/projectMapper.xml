<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.oracle.projectMapper">
	<resultMap id="RM_project" type="Project">
		<id property="num"					column="NUM" />
		<result property="name"				column="NAME" />
		<result property="thePublic"		column="IS_THE_PUBLIC"		typeHandler="yesNoTypeHandler"/>
		<result property="myProject"		column="IS_MY_PROJECT"		typeHandler="yesNoTypeHandler"/>
	</resultMap>
	
	<select id="selectProjectNames" parameterType="int" resultMap="RM_project">
		select NUM, NAME, IS_THE_PUBLIC, decode(t2.PROJECT_NUM, null, 'N', 'Y') as IS_MY_PROJECT   
  		  from PROJECT t1
  		  left outer join (
	   			select PROJECT_NUM 
	     		  from PROJECT_USER
	    		 where USER_NUM = #{userNum}
  		) t2 on t1.NUM = t2.PROJECT_NUM	
	</select>
	
	<insert id="insertProject" parameterType="Project">
		<selectKey keyColumn="NUM" keyProperty="num" resultType="int" order="BEFORE">
		select PROJECT_SEQ.nextval from dual
		</selectKey>
		insert into PROJECT(
			NUM, NAME, ALIAS, DESCRIPTION,IS_THE_PUBLIC, START_DATE, END_DATE
		)
		values (
			#{num}, #{name}, #{alias}, #{description}, #{thePublic, typeHandler=yesNoTypeHandler}, #{startDate}, #{endDate}
		)
	</insert>
	
	<insert id="insertProjectUser" parameterType="map">
		insert ALL 
		<foreach collection="list" item="projectUser" separator="">
		into PROJECT_USER (
			PROJECT_NUM, USER_NUM, USER_ROLE_NUM
		)
		values 
		(
			#{projectUser.projectNum}, #{projectUser.userNum}, 1
		)
		</foreach>
		select * from dual
	</insert>
	
	<select id="selectTaskTypes" resultType="map">
		select NUM, NAME
		  from TASK_TYPE
		  order by NUM
	</select>
	
	<select id="selectTaskStatuses" resultType="map">
		select NUM,NAME
		  from TASK_STATUS
		  order by SOONSEO
	</select>
	
	<select id="selectTaskPriorities" resultType="map">
		select NUM,NAME
		  from TASK_PRIORITY
		  order by SOONSEO
	</select>
	
	<select id="selectProjectUsers" parameterType="int" resultType="map">
		select NUM, ID, F_NAME, S_NAME
  		  from PROJECT_USER t1 
  		  inner join USERS t2
    		 on t1.PROJECT_NUM = #{projectNum}
   			and t1.USER_NUM = t2.NUM 
	</select>
	
	<sql id="taskColumn">
		NUM, TYPE_NUM, TITLE, DESCRIPTION, STATUS_NUM, PRIORITY_NUM, RESPONSIBILITY_NUM, START_DATE, END_DATE, PROGRESS,
		VIEWER_NUMS, PROJECT_NUM, WRITE_DATE, WRITE_USER_NUM
	</sql>
	<insert id="insertTask" parameterType="Task">
		<selectKey keyProperty="num" keyColumn="NUM" resultType="int" order="BEFORE">
		select TASK_SEQ.nextval from dual
		</selectKey>
		insert into TASK(<include refid="taskColumn" />)
		values (
			#{num}, #{typeNum}, #{title}, #{description}, #{statusNum}, #{priorityNum}, #{responsibilityNum}, #{startDate}, #{endDate}, #{progress},
			'', #{projectNum}, sysdate, #{writeUserNum}
		)
	</insert>
	
	<select id="selectTasks" parameterType="map" resultType="map">
		select t1.NUM, t2.NAME as TYPE_NAME, t3.NAME as STATUS_NAME, t4.NAME as PRIORITY_NAME, TITLE,
		       t5.F_NAME || t5.S_NAME as RESPONSIBILITY_NAME, t1.WRITE_DATE  
		  from TASK t1
		 inner join TASK_TYPE t2
		    on t1.TYPE_NUM = t2.NUM
		 inner join TASK_STATUS t3
		    on t1.STATUS_NUM = t3.NUM
		 inner join TASK_PRIORITY t4
		    on t1.PRIORITY_NUM = t4.NUM
		 inner join USERS t5
		    on t1.RESPONSIBILITY_NUM = t5.NUM
		 where t1.PROJECT_NUM = #{pnum}
		 order by t1.NUM ${order} 
	</select>
	
	<select id="selectTaskDupTitle" parameterType="Task" resultType="int">
		select count(NUM)
		  from TASK
		 where TITLE = #{title}
		   and PROJECT_NUM = #{projectNum}
	</select>
	
	<select id="selectTaskForCalendar" parameterType="string" resultType="map">
		<![CDATA[
		select TITLE as "title", to_char(START_DATE, 'yyyy-MM-dd')  as "start",
		       to_char(END_DATE, 'yyyy-MM-dd') as "end"
		  from TASK
		 where PROJECT_NUM =#{projectNum}
		   and START_DATE >= (select trunc(sysdate,'MM') from dual) 
		   and END_DATE <= (select last_day(sysdate) from dual)
		 ]]>
	</select>
</mapper>